/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    emilytrybulec/argonaut Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    //// INPUT OPTIONS ////

    tar                        = false
    // fastq or fastq.gz file in .tar format

    longread                   = true
    // ONT and or PacBio Hifi reads available

    ONT_lr                     = false
    // ONT reads available

    ONT_lr_ultralong           = false
    // ONT reads being provided are ultra long

    ONT_lr_herrocorrected      = false

    PacBioHifi_lr              = true
    // PacBio reads are available

    shortread                  = false
    // Illumina short reads are available

    kmer_num                   = 21
    // Preferred kmer number for meryl and other similar programs


    // LONG READ QC

    centrifuge_ont                 = true

    kraken_pb                      = true

    min_readlength             = 0
    // Length filter for ONT long reads

    save_unaligned             = true
    save_aligned               = false
    sam_format                 = false
    // Options for centrifuge, recommended to leave as is

    //// SHORT READ QC ////

    kraken_ill                = true
    //contam filter with kraken2

    samtools_sort             = true
    //use samtools sort (true) or samtools view (false)

    length_cutoff              = 45
    // Length filtering for Illumina short reads

    adapter_fasta              = []
    // Adapter fasta sequence if available

    dedup                      = false
    // Deduplication of short reads with FastP

    quality_trimming           = false
    // Quality trimming short reads with FastP

    save_trimmed_fail          = false
    save_merged                = false
    save_output_fastqs         = true
    save_reads_assignment      = true
    // Options for FastP, recommended to leave as is


    //// ASSEMBLY OPTIONS ////

    flye                       = true
    // Run flye assembler with long reads, if available

    canu                       = false
    // Run canu assembler with long reads, if available

    hifiasm                    = false
    // Run hifiasm assembler with HiFi and ONT ultra long reads, if available

    verkko                     = false

    masurca                    = false
    // Run masurca assembler with long and short reads, if available
    
    masurca_adv             = false
    // Run masurca assembler using a manually curated configuration file

    redundans                  = false
    // Run redundans assembler with short reads, if available

    ex_assembly                = false
    // Input existing assembly into the pipeline for downstream processing

    //// ASSEMBLY QC OPTIONS ////

    busco                      = true
    // Run busco for completeness stats, required true for blobtools visualization, choice between busco and compleasm

    compleasm                  = false
    // Run compleasm for completeness stats, choice between busco and compleasm

    winnowmap                  = true
    // Run winnowmap for read alignments to genome, choice between winnowmap and minimap2
    
    minimap2                   = false
    // Run minimap2 for read alignments to genome, choice between winnowmap and minimap2


    tolerable_collision        = 0.001
    // Tolerable collision rate for Merqury

    bam_format                 = true
    cigar_paf_format           = true
    cigar_bam                  = false
    // Options for Minimap2, recommended to leave as is


    //// POLISH OPTIONS ////

    pilon                      = false

    medaka_polish              = false
    // Run medaka polishing on assemblies

    racon_polish               = true
    // Run racon polishing on assemblies and or medaka polish

    polca                      = true


    //// PURGE OPTIONS ////

    purge                      = true
    // Run purge haplotigs on assemblies

    //// to be inputted by the user after histogram is generated ////

    low = null
    // -l flag for purge haplotigs
    // ex. low = 0

    mid = null
    // -m flag for purge haplotigs
    // ex. mid = 10

    high = null
    // -h flag for purge haplotigs
    // ex. high = 200

    //// SCAFFOLDING OPTIONS /////

    ragtag_scaffold            = false
    // Run ragtag to scaffold assembly to closely related species' reference genome


    //// VISUALIZATION OPTIONS ////
    blobtools_visualization    = false
    // Run blobtools on final assemblies


    //// PARAMETERS ////
    // to be set in your params.yaml file

    // Required params (vary depending on read input)

    input                      = null    
    // Path to ONT samplesheet, or PacBio samplesheet if no ONT reads

    fastq                      = null    
    // Path to ONT fastq if available, else PacBio fastq, else Illumina fastq 
    // Mainly used for workflow initiation, reads are taken from samplesheets

    summary_txt                = null
    // Path to summary text file from ONT sequencing_summary

    model                      = null    
    // Model of ONT sequencer for medaka 

    busco_lineage              = null
    // Specify taxonomic lineage protein dataset for BUSCO completeness quality checking (ex. mammalia_odb10)

    compleasm_lineage          = null
    // Specify taxonomic lineage protein dataset for Compleasm completeness quality checking (ex. mammalia)

    centrifuge_db              = null 
    // Path to centrifuge database for ONT contaminant filtering 

    kraken_db                  = null   
    // Path to kraken2 database for Illumina or PacBio contaminant filtering
    
    rcf_db                     = null
    // Path to recentrifuge database for contaminant visualization

    outdir                     = null
    // Specify an outdirectory name
 

    // Optional params depending on configs set above

    manual_genome_size         = null
    // Specify a genome size rather than using output from Genomescope2 or Kmerfreq

    flye_mode                 = null
    // Runs flye with 'ont' or 'pb' reads, or 'both'- most useful for excluding worse flye assembly from polishing

    pb_xml                     = null
    // SubreadSet or ConsensusReadSet dataset XML (optionally) inputted for PacBio quality checking
    
    existing_assembly          = null
    // Path to an existing assembly

    masurca_config             = null
    // Path to masurca config file for advanced runs

    ragtag_reference           = null
    // Path to reference genome for scaffolding

    taxon_taxid                = null
    // Species taxid from Genomes on a Tree (GOAT) for blobtools, not required to run

    taxon_taxdump              = null
    // Path to taxdump for blobtools, not required to run

    blast_db                   = null
    // Path to blast database for blobtools contaminant detection, not required to run

    //// GENERAL NF CORE OPTIONS ////
    
    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    tracedir                   = "${params.outdir}/pipeline_info"
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'

    // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null


    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '200.GB'
    max_cpus                   = 32
    max_time                   = '240.h'

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'
// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/genomeassembly custom profiles from different institutions.
// Warning: Uncomment only if a pipeline-specific instititutional config already exists on nf-core/configs!
// try {
//   includeConfig "${params.custom_config_base}/pipeline/genomeassembly.config"
// } catch (Exception e) {
//   System.err.println("WARNING: Could not load nf-core/config/genomeassembly profiles: ${params.custom_config_base}/pipeline/genomeassembly.config")
// }


profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup = false
    }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    docker {
        docker.enabled         = true
        docker.registry        = 'quay.io'
        docker.userEmulation   = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    arm {
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled         = true
        podman.registry        = 'quay.io'
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    shifter {
        shifter.enabled        = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    charliecloud {
        charliecloud.enabled   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        apptainer.enabled      = false
    }
    apptainer {
        apptainer.enabled      = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 16
        executor.memory        = 60.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}




// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/genomeassembly'
    author          = """emilytrybulec"""
    homePage        = 'https://github.com/nf-core/genomeassembly'
    description     = """pipeline for ONT long read genome assembly"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.10.1'
    version         = '1.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
